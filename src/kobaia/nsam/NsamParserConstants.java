/* Generated By:JavaCC: Do not edit this line. NsamParserConstants.java */
package kobaia.nsam;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface NsamParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int NUMERAL_COMMENT = 6;
  /** RegularExpression Id. */
  int PLUS = 7;
  /** RegularExpression Id. */
  int DASH = 8;
  /** RegularExpression Id. */
  int SLASH = 9;
  /** RegularExpression Id. */
  int ASTERISK = 10;
  /** RegularExpression Id. */
  int LPAREN = 11;
  /** RegularExpression Id. */
  int RPAREN = 12;
  /** RegularExpression Id. */
  int LBRACKET = 13;
  /** RegularExpression Id. */
  int RBRACKET = 14;
  /** RegularExpression Id. */
  int LBRACE = 15;
  /** RegularExpression Id. */
  int RBRACE = 16;
  /** RegularExpression Id. */
  int COLON = 17;
  /** RegularExpression Id. */
  int SEMICOLON = 18;
  /** RegularExpression Id. */
  int COMMA = 19;
  /** RegularExpression Id. */
  int LT = 20;
  /** RegularExpression Id. */
  int GT = 21;
  /** RegularExpression Id. */
  int PERIOD = 22;
  /** RegularExpression Id. */
  int PREFIX = 23;
  /** RegularExpression Id. */
  int HAS = 24;
  /** RegularExpression Id. */
  int GHAS = 25;
  /** RegularExpression Id. */
  int GIS = 26;
  /** RegularExpression Id. */
  int IS = 27;
  /** RegularExpression Id. */
  int OF = 28;
  /** RegularExpression Id. */
  int GOF = 29;
  /** RegularExpression Id. */
  int GOLBAENGI = 30;
  /** RegularExpression Id. */
  int ThisDoc = 31;
  /** RegularExpression Id. */
  int Name = 32;
  /** RegularExpression Id. */
  int NUMBER = 33;
  /** RegularExpression Id. */
  int REAL = 34;
  /** RegularExpression Id. */
  int DIGIT = 35;
  /** RegularExpression Id. */
  int ALPHA = 36;
  /** RegularExpression Id. */
  int ALPHANUM = 37;
  /** RegularExpression Id. */
  int NCBegin = 38;
  /** RegularExpression Id. */
  int QNamePref = 39;
  /** RegularExpression Id. */
  int QName = 40;
  /** RegularExpression Id. */
  int URIRef = 41;
  /** RegularExpression Id. */
  int FragID = 42;
  /** RegularExpression Id. */
  int Var = 43;
  /** RegularExpression Id. */
  int STRING = 44;
  /** RegularExpression Id. */
  int TypedString = 45;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "\"\\n\"",
    "<NUMERAL_COMMENT>",
    "\"+\"",
    "\"-\"",
    "\"/\"",
    "\"*\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\":\"",
    "\";\"",
    "\",\"",
    "\"<\"",
    "\">\"",
    "\".\"",
    "\"@prefix\"",
    "\"has\"",
    "\"@has\"",
    "\"@is\"",
    "\"is\"",
    "\"of\"",
    "\"@of\"",
    "\"@\"",
    "\"<>\"",
    "<Name>",
    "<NUMBER>",
    "<REAL>",
    "<DIGIT>",
    "<ALPHA>",
    "<ALPHANUM>",
    "<NCBegin>",
    "<QNamePref>",
    "<QName>",
    "<URIRef>",
    "<FragID>",
    "<Var>",
    "<STRING>",
    "<TypedString>",
    "\"=>\"",
    "\"=\"",
  };

}
